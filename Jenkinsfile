pipeline {
    agent any

    tools {
        jdk 'BellSoft-21' // Assurez-vous que ce JDK est bien d√©fini dans Jenkins (avec jpackage)
    }

    environment {
        MAVEN_HOME = '/usr/share/maven'
        PATH = "${env.MAVEN_HOME}/bin:${env.PATH}"
        DEPLOY_DIR = '/home/eyadomaleki/deployement'
        JAR_NAME = 'calculatrice-1.0.0-jar-with-dependencies.jar'
        APP_NAME = 'CalculatriceDEEVEN'
        JAVAFX_LIB = "/opt/javafx/javafx-sdk-21.0.2/lib"
    }

    triggers {
        githubPush()
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì• Clonage du d√©p√¥t...'
                git url: 'https://github.com/DEEVEN-k/JENKINS.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                echo 'üèóÔ∏è Compilation du projet...'
                sh 'mvn clean compile'
            }
        }

        stage('Test') {
            steps {
                echo 'üß™ Ex√©cution des tests unitaires...'
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                echo 'üì¶ Packaging du JAR avec d√©pendances...'
                sh 'mvn package'
            }
        }

        stage('Archive JAR') {
            steps {
                echo 'üìÅ Archivage du fichier JAR...'
                sh '''
                    if [ ! -f target/${JAR_NAME} ]; then
                        echo "‚ùå Le fichier ${JAR_NAME} est introuvable dans target/"
                        exit 1
                    fi
                '''
                archiveArtifacts artifacts: "target/${JAR_NAME}", fingerprint: true
            }
        }

        stage('Cr√©er archive .zip') {
            steps {
                echo 'üóúÔ∏è Cr√©ation de l‚Äôarchive .zip...'
                sh '''
                    mkdir -p dist
                    cp target/${JAR_NAME} dist/
                    cd dist && zip calculatrice-${BUILD_NUMBER}.zip ${JAR_NAME}
                '''
            }
        }

        stage('Cr√©er .rpm') {
            when { expression { isUnix() } }
            steps {
                echo 'üì¶ Cr√©ation de l‚Äôinstallateur .rpm...'
                sh '''
                    mkdir -p dist
                    jpackage \
                      --type rpm \
                      --input target \
                      --dest dist \
                      --name ${APP_NAME} \
                      --main-jar ${JAR_NAME} \
                      --main-class com.example.CalculatriceApp \
                      --icon icon.png \
                      --linux-shortcut \
                      --module-path ${JAVAFX_LIB} \
                      --add-modules javafx.controls,javafx.fxml \
                      --verbose
                '''
            }
        }

        stage('D√©ploiement') {
            steps {
                echo 'üöÄ D√©ploiement vers le dossier cible...'
                sh '''
                    mkdir -p ${DEPLOY_DIR}
                    cp dist/*.zip ${DEPLOY_DIR}/ || echo "‚ö†Ô∏è Pas de fichier zip √† d√©ployer."
                    cp dist/*.rpm ${DEPLOY_DIR}/ || echo "‚ö†Ô∏è Pas de fichier rpm √† d√©ployer."
                '''
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline ex√©cut√© avec succ√®s !'
            archiveArtifacts artifacts: 'dist/*.zip, dist/*.rpm', fingerprint: true
        }
        failure {
            echo '‚ùå √âchec du pipeline.'
            sh 'cat target/surefire-reports/*.txt || true'
        }
        always {
            echo 'üßπ Nettoyage du workspace...'
            cleanWs()
        }
    }
}
